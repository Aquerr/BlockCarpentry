<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 3d9c0b1 (Started porting the mod to 1.17)
Build: 1.15.1-30.0.51 - Wed Jan 22 21:10:07 GMT 2020
	ichttt:
		Cleanup fml packages removing old deprecated classes related to GUIs/Configs and fix HoverChecker (#6437)
		
		Fixed ModListWidget name to avoid confusion and collision.
		Delete CheckBox, as vanilla has it's own CheckBox now which looks much better
		Rename ModConfigEvent.ConfigReloading to ModConfigEvent.Reloading

=========
Build: 1.15.1-30.0.50 - Wed Jan 22 20:38:22 GMT 2020
	12281102+Aeltumn:
		Fixed parameter name issue in ISTER rename. #6461 (#6468)

=========
Build: 1.15.1-30.0.49 - Wed Jan 22 19:56:16 GMT 2020
	lex:
		Fix default widget foreground color.

=========
Build: 1.15.1-30.0.48 - Wed Jan 22 19:30:35 GMT 2020
	diesieben07:
		Use extended version of getLightValue in all places (#6433)

	Bward7864:
		Fixed RenderTypeLookup loosing mappings for registry replacements. (#6452)

	wynprice999:
		Fixed rounding issue with entity navigation fix (#6455) (#6456)

	37298044+Cadiboo:
		Fix Widget Foreground Color not allowing pure black (#6460)

	12281102+Aeltumn:
		Updated method names referencing ItemStackTileEntityRenderer (#6461)

=========
Build: 1.15.1-30.0.43 - Wed Jan 22 19:22:15 GMT 2020
	scottehboeh:
		[1.15.x] Added entity nameplate rendering event hook (#6416)

=========
Build: 1.15.1-30.0.42 - Tue Jan 21 03:47:02 GMT 2020
	tterrag:
		Remove emissive items hook, add small utility for bakedquad lighting

=========
Build: 1.15.1-30.0.41 - Thu Jan 16 02:30:04 GMT 2020
	David Quintana:
		Fix breaking overlay weirdness. applyBakedNormals was not transforming the baked normals when applying them. Fixes #6432

=========
Build: 1.15.1-30.0.40 - Thu Jan 16 00:30:10 GMT 2020
	12281102+Aeltumn:
		[1.15] Add new InputEvent.ClickInputEvent, addresses #5802 (#6047)

=========
Build: 1.15.1-30.0.39 - Mon Jan 13 22:21:01 GMT 2020
	David Quintana:
		Fix dark spots in fullbright quad rendering.
		Fix multi-layer model not declaring dependency on the particle texture.
		Fix mistake in 2c054fca which I didn't intend to push when I did.

=========
Build: 1.15.1-30.0.38 - Mon Jan 13 18:39:06 GMT 2020
	David Quintana:
		Attempt to fix fullbright lighting.
		
		Fix lightmap value calculation.

	David Quintana:
		Fix multi-layer model loader to actually work in a sane way. No more "base" model involved, and now transforms and overrides work as expected.

=========
Build: 1.15.1-30.0.36 - Thu Jan 09 22:28:02 GMT 2020
	tterrag:
		Add constructor for FishBucketItem that accepts suppliers

=========
Build: 1.15.1-30.0.35 - Tue Jan 07 22:58:54 GMT 2020
	David Quintana:
		Fix QuadTransformer normal processing.

	Choonster.2010:
		Fix validation in RotationBuilder#angle (fixes #6323) (#6408)

=========
Build: 1.15.1-30.0.33 - Tue Jan 07 22:20:46 GMT 2020
	richard:
		Add support for custom nether portal frame blocks (#6389)

=========
Build: 1.15.1-30.0.32 - Tue Jan 07 21:22:49 GMT 2020
	RANKSHANK:
		InputEvent.RawMouseEvent fix (#6395)

=========
Build: 1.15.1-30.0.31 - Tue Jan 07 21:15:19 GMT 2020
	DaemonUmbra:
		Fixed Big Mushrooms not generating (#6390)
		
		Removed vanilla negation from Forge logic that negated the vanilla logic it was replacing
		also ran datagen to update the dirt tag to reflect changes that were previously made in the datagen code

=========
Build: 1.15.1-30.0.30 - Mon Jan 06 00:04:17 GMT 2020
	tterrag:
		Fix dyes tag containing dye items instead of tags
		
		Update generated data

=========
Build: 1.15.1-30.0.29 - Sun Jan 05 19:36:08 GMT 2020
	Choonster.2010:
		[1.15.x] Remove unused parameter from ElementBuilder#rotation (fixes #6321) (#6407)

=========
Build: 1.15.1-30.0.28 - Sun Jan 05 19:29:10 GMT 2020
	tterrag:
		Refactor BlockStateProvider to encapsulate a BlockModelProvider
		
		Make most protected methods of data generators public

=========
Build: 1.15.1-30.0.27 - Sun Jan 05 18:39:00 GMT 2020
	tterrag:
		Fix crash when building BakedQuadBuilder
		
		Add javadocs and move sprite to constructor where possible

=========
Build: 1.15.1-30.0.26 - Sun Jan 05 05:05:58 GMT 2020
	tterrag:
		Fix incorrect check for missing texture in DynamicBucketModel

=========
Build: 1.15.1-30.0.25 - Sun Jan 05 04:38:48 GMT 2020
	tterrag:
		Remove custom vertex format from BakedQuad

=========
Build: 1.15.1-30.0.24 - Sat Jan 04 16:19:24 GMT 2020
	David Quintana:
		Cherry-pick ca819e09 from the 1.14.x branch. Removes a patch from NativeImage which was invalid.

	David Quintana:
		A few more binary-breaking changes, before it's too late:
		- Move CompositeModel out of its package.
		- Move a few inner classes from the OBJ loader.
		- Rename the bucket model and fluid model classes to match the naming convention.
		- Remove BiomeEvent.* and WorldTypeEvent.InitBiomeGens as they are not currently implemented and they haven't been in the previous version either.

=========
Build: 1.15.1-30.0.22 - Fri Jan 03 03:02:54 GMT 2020
	lex:
		Fix the particle renderer not setting GL state between each type. MC-168672

=========
Build: 1.15.1-30.0.21 - Thu Jan 02 05:21:55 GMT 2020
	David Quintana:
		Fix CompositeModel not respecting "display" transforms.
		Remove leftovers from discarded feature.

=========
Build: 1.15.1-30.0.20 - Wed Jan 01 16:41:59 GMT 2020
	David Quintana:
		Allow model jsons to override the material library used by OBJ models.
		Fix model loader test mod resources.
		Update licenses.

=========
Build: 1.15.1-30.0.19 - Mon Dec 30 21:14:20 GMT 2019
	tterrag:
		Apply baked-in lightmap data to rendering
		
		- Fix ForgeHooksClient.fillNormal injecting data to lightmap
		- Fix OBJModel not filling lightmap data
		- Fix NewModelLoaderTest blockitem not linking with block

=========
Build: 1.15.1-30.0.18 - Sun Dec 29 16:16:44 GMT 2019
	David Quintana:
		Fix LightUtil.unpack to set the 4th component to 1 when expanding an xyz position into a 4-component vector.
		Add TRSRTransformer test mod.
		Fix signature of the bindTileEntityRenderer method, to account for covariance.

=========
Build: 1.15.1-30.0.17 - Sun Dec 29 01:16:20 GMT 2019
	David Quintana:
		More model/rendering fixes:
		- Breaking change: Change ClientRegistry.bindTileEntityRenderer to a factory, so mods don't have to manually specify the dispatcher.
		- Breaking change: Delete obsolete SimpleModelState (the class was duplicated by mistake, see SimpleModelTransform) and ICustomModelState (part of the old loader API).
		- Breaking change: Rename getTextureDependencies to getTextures, for consistency.
		- Reinstate the getRenderLayer method, fixed appropriately to return the new RenderType value.
		- Fix OBJ loader applying the model transform in the wrong reference frame.
		- Fix vanilla bug in TransformationMatrix#func_227986_a_
		- Fix QuadTransformer logic.
		- Added new method to IModelConfiguration to retrieve the owner IUnbakedModel, needed in order to construct ItemOverrideLists when baking custom models.
		- Reintroduce multi-layer model through the new model loader system.

=========
Build: 1.15.1-30.0.16 - Tue Dec 24 12:16:17 GMT 2019
	David Quintana:
		New batch of Model/rendering fixes:
		- PerspectiveMapWrapper did not pass IModelData through to the wrapped model.
		- CompositeModel did not store the returned textures from getTextureDependencies.
		- VertexFormat used COLOR instead of UV to detect UV presence.
		- QuadTransformer would crash due to index out of bounds.
		- Small cleanup of TransformationHelper

=========
Build: 1.15.1-30.0.15 - Fri Dec 20 17:15:21 GMT 2019
	David Quintana:
		Fix obj models having all faces in the same mesh, breaking material assignments and visibility in the process.
		Reintroduce lost patch from the model loader, which would cause the custom values to be missing from generated models.

=========
Build: 1.15.1-30.0.14 - Fri Dec 20 04:14:34 GMT 2019
	tterrag:
		Fix diffuse lighting being baked into models, fixes dark items

=========
Build: 1.15.1-30.0.13 - Fri Dec 20 03:50:53 GMT 2019
	David Quintana:
		Fix item quads not using the existing vertex color when applying tint colors.

=========
Build: 1.15.1-30.0.12 - Fri Dec 20 01:44:40 GMT 2019
	David Quintana:
		Fix bucket model. Some mask textures were not added to the repository, and the bucket override generation was broken.
		Fix OBJ loading crash due to a float value being parsed as int.
		Fixes 6377

=========
Build: 1.15.1-30.0.11 - Thu Dec 19 05:56:10 GMT 2019
	bl4ckscor33:
		Fix game crashing when modded entities are present (#6364)

=========
Build: 1.15.1-30.0.10 - Thu Dec 19 05:02:29 GMT 2019
	ichttt:
		Fix warning screen about missing minecraft registry entries (#6363)

	richard:
		Fix capabilities becoming inaccessible on returning from end (#6368)

=========
Build: 1.15.1-30.0.8 - Thu Dec 19 04:39:52 GMT 2019
	ichttt:
		Some code cleanup for 1.15 (#6362)

=========
Build: 1.15.1-30.0.7 - Wed Dec 18 02:11:01 GMT 2019
	tterrag:
		Fix MainMenuScreen patch

	tterrag:
		Mod list GUI detail pass
		
		- Make padding consistent on all elements
		- Properly horizontally center the "Search" text
		- Update and resize forge/mcp logos
		- Enable linear filtering on logo rendering by default
		  - Can be disabled with the "logoBlur" mods.toml property

=========
Build: 1.15.1-30.0.5 - Wed Dec 18 01:03:20 GMT 2019
	ichttt:
		Fix mod list screen (#6367)

=========
Build: 1.15.1-30.0.4 - Tue Dec 17 23:47:00 GMT 2019
	David Quintana:
		Fix items in ground being too small, we were applying perspectives twice.
		Restore forge patch and fix a tiny mistake in it.

	tobias.hotz:
		Fix keybinds not loading/saving correctly

=========
Build: 1.15.1-30.0.2 - Tue Dec 17 22:38:00 GMT 2019
	tterrag:
		Remove uvlock hook, fixes broken stair/fence/etc models

	tterrag:
		Update fallback spec version

=========
Build: 1.15.1-30.0.0 - Tue Dec 17 19:42:28 GMT 2019
	tterrag:
		Update to 1.15.1

=========
Build: 1.15-29.0.4 - Tue Dec 17 18:15:10 GMT 2019
	David Quintana:
		Finish converting the code from javax.vecmath to the vanilla vector classes. Forge is now vecmath-free!

=========
Build: 1.15-29.0.3 - Tue Dec 17 09:50:53 GMT 2019
	tterrag:
		Remove deprecations

=========
Build: 1.15-29.0.2 - Tue Dec 17 04:47:01 GMT 2019
	tterrag:
		Fix incorrect item lighting

=========
Build: 1.15-29.0.1 - Tue Dec 17 04:22:29 GMT 2019
	tterrag:
		Revert fluid change to use Material, fixes server crash
<<<<<<< HEAD
=======
=======
Build: 1.17.1-37.1.1 - Fri Dec 10 09:43:11 GMT 2021
	oriondevelopment:
		[CVE-2021-44228]: Update Log4J to fix the security issue inside it. (#8269)

=========
Build: 1.17.1-37.1.0 - Tue Nov 30 16:58:27 GMT 2021
	lexmanos:
		Bump version for final RB of 1.17's lifecycle. Move on to 1.18!

=========
Build: 1.17.1-37.0.127 - Tue Nov 30 16:44:02 GMT 2021
	lexmanos:
		Fix LiquidBlock's fluid field not being redirected to the supplier getFluid. Closes #7922

=========
Build: 1.17.1-37.0.126 - Thu Nov 25 21:10:10 GMT 2021
	sciwhiz12:
		[1.17.x Omnibus] Fix typos and javadocs across code base (#8144)

=========
Build: 1.17.1-37.0.125 - Thu Nov 25 20:30:40 GMT 2021
	uSkizzik:
		Fix Spectating Part Entity (MC-46486) (#8206)

	ateranimavis:
		Fix /forge setdimension command arguments not parsing/suggesting correctly.

=========
Build: 1.17.1-37.0.123 - Thu Nov 25 20:17:03 GMT 2021
	paintninja:
		Use HttpClient for VersionChecker (#8148)

=========
Build: 1.17.1-37.0.122 - Thu Nov 25 20:03:19 GMT 2021
	Harleyoc1:
		Changed control flow of post mouse events to allow listening to events handled by vanilla. (#8133)

=========
Build: 1.17.1-37.0.121 - Thu Nov 25 19:13:10 GMT 2021
	sciwhiz12:
		Deprecate durability bar methods in Item extension (#8214)
		
		To retain compatibility with existing mods, the vanilla methods redirect
		to the extension methods for now.
		
		Users should now use and override the vanilla methods as directed in
		the javadocs of the now-deprecated methods, as the extension methods
		will be removed in the future.
		
		Fixes #8201

=========
Build: 1.17.1-37.0.120 - Thu Nov 25 18:59:09 GMT 2021
	sciwhiz12:
		Reorder image tooltip component to match vanilla (#8213)
		
		Fixes #8212

=========
Build: 1.17.1-37.0.119 - Thu Nov 25 10:14:28 GMT 2021
	sekwah41:
		Fix render pipeline lighting issue with small cubes (#8158)
		
		This will also allow other mods which need to calculate small normalised vectors to be able to use the default classes without needing to write their own, while not effecting any side effects created by how the base game uses this function.

=========
Build: 1.17.1-37.0.118 - Thu Nov 25 02:03:27 GMT 2021
	championash5357:
		Fixes infinite loop when dismounting in `EntityMountEvent` (#8114)

=========
Build: 1.17.1-37.0.117 - Wed Nov 24 21:54:07 GMT 2021
	ichttt:
		Fix onChunkUnloaded not gettting called correctly (#8103)

=========
Build: 1.17.1-37.0.116 - Wed Nov 24 01:16:10 GMT 2021
	daemonumbra:
		Fix potential issue with BackgroundScanHandler for users with slow disc IO (#8176)

	diesieben07:
		Fix death message for tamed animals not having proper cause of death. (#8196)

=========
Build: 1.17.1-37.0.114 - Wed Nov 24 01:02:40 GMT 2021
	telepathicgrunt:
		Make WorldEvent.Load run for Overworld before chunk creation like other dimensions (#8167)

=========
Build: 1.17.1-37.0.113 - Wed Nov 24 00:48:00 GMT 2021
	platinpython:
		Deprecate net.minecraftforge.common.util.Constants and inner classes to encourage usage of vanilla constants (#8140)

=========
Build: 1.17.1-37.0.112 - Sun Nov 21 18:26:44 GMT 2021
	supermartijn642:
		[1.17.x] Change expected type of LootTable fields to arrays (#8194)
		
		#8184 reverted some LootTable patches, including the types of fields `f_79023_` and `f_79024_`. However, `ForgeLootTableProvider` still expects a list, however the type of the fields is an array now.
		This PR changes the expected type in `ForgeLootTableProvider` to an array as well.

=========
Build: 1.17.1-37.0.111 - Sun Nov 21 12:29:14 GMT 2021
	melanx:
		Apply window resizing to all gui layers (#8207)

=========
Build: 1.17.1-37.0.110 - Sat Nov 20 15:54:24 GMT 2021
	minecraftschurli:
		[1.17.x] make ScrollPanel better usable by modders (#8179)

=========
Build: 1.17.1-37.0.109 - Sat Nov 13 01:25:58 GMT 2021
	lexmanos:
		Update installer to 2.1.+ so we don't have to bump it in the future.

=========
Build: 1.17.1-37.0.108 - Wed Nov 10 20:18:07 GMT 2021
	championash5357:
		Remove Old LootPool Patches (#8184)

=========
Build: 1.17.1-37.0.107 - Tue Nov 09 22:31:15 GMT 2021
	minecraftschurli:
		Fix the hopefully last issue with GAMELIBRARY loading (#8162)

	ichttt:
		Remove the remnants of the selective reload listener (#8072)

=========
Build: 1.17.1-37.0.105 - Tue Nov 09 22:17:00 GMT 2021
	uSkizzik:
		Fix part entities not working at all (#8177)

=========
Build: 1.17.1-37.0.104 - Sun Oct 31 11:26:47 GMT 2021
	xfacthd:
		Pass IModelData through IForgeBakedModel#getModelData() before asking the BakedModel for the particle texture (#8106)

=========
Build: 1.17.1-37.0.103 - Wed Oct 20 19:23:46 GMT 2021
	xfacthd:
		Fix blocks with flammable material catching fire from lava when they are marked as non-flammable (#8160)

=========
Build: 1.17.1-37.0.102 - Wed Oct 20 19:10:23 GMT 2021
	xfacthd:
		Add accessor to an unmodifiable view of the fullPots map in FlowerPotBlock (#8108)

	championash5357:
		Fix Breaking waterlogged blocks occasionally displays air for a frame Closes #7253 (#8128)

	djbake101:
		Add "forge:enchanting_materials" tag in place of Lapis in the Enchanting Table (#8149)

	35673674+alcatrazescapee:
		Add `BiomeDictionary#hasType(String)` (#8157)

=========
Build: 1.17.1-37.0.98 - Wed Oct 20 18:56:43 GMT 2021
	championash5357:
		Fix Behavior With Unknown Items in Recipes (#8105)

=========
Build: 1.17.1-37.0.97 - Sun Oct 17 23:29:15 GMT 2021
	lexmanos:
		Disable jenkins cache system until a functional system is in place.

	diesieben07:
		Fix another crash with new tooltip events (#8155)
		
		* Fix another crash with new tooltip events
		* Add ItemStack context to ghost recipe tooltip events
		* Expand Tooltip Event test mod to add a screen to test all tooltip render methods

=========
Build: 1.17.1-37.0.95 - Fri Oct 15 03:23:39 GMT 2021
	championash5357:
		Add entity source to PotionAddedEvent (#8147)

=========
Build: 1.17.1-37.0.94 - Fri Oct 15 03:12:02 GMT 2021
	35673674+alcatrazescapee:
		Add ATs for world generation extensibility, focusing on `NoiseBasedChunkGenerator`, `NoiseSampler`, `NoiseBasedAquifer`, and `Beardifier` (#8087)

	dev:
		Fix Entity#onAddedToWorld not being called for non-player entities server-side (#8134)

	dipo33:
		Add helper methods to generate blockstate and models for button, pressure plate, sign to BlockStateProvider/ModelProvider (#8139)

=========
Build: 1.17.1-37.0.91 - Fri Oct 15 03:00:33 GMT 2021
	Unbekannt1998:
		Make AdvancementProvider extensible by modders (#8120)

=========
Build: 1.17.1-37.0.90 - Wed Oct 13 19:51:35 GMT 2021
	lexmanos:
		Skip loading jars with neither a manifest, nore a mods.toml.
		Deprecate helper functions related to ModFile/Metadata.
		Mark ModFileFactory as to be removed from our usage.
		It may be useful for other loaders, but introduces a weird level of indirection that makes things a pain.
		If there are consumers of this API please leave feedback before the next major mc version so we can be sure to provide something useful.

=========
Build: 1.17.1-37.0.89 - Wed Oct 13 19:19:40 GMT 2021
	lexmanos:
		Fix mods with both a manifest and a mods.toml have mismatched module names.

=========
Build: 1.17.1-37.0.88 - Wed Oct 13 12:02:44 GMT 2021
	diesieben07:
		Fix missing toolTip methods in Screen (#8154)

=========
Build: 1.17.1-37.0.87 - Wed Oct 13 08:59:14 GMT 2021
	diesieben07:
		Fix render tooltip render patch (#8153)

=========
Build: 1.17.1-37.0.86 - Wed Oct 13 01:49:43 GMT 2021
	lexmanos:
		Attempt to fix non-mods.toml jar files. Closes #8136 #8146 #8152
		Make jenkins copy gradle cache to address concurrent build issues.

=========
Build: 1.17.1-37.0.85 - Mon Oct 11 18:37:30 GMT 2021
	diesieben07:
		Tooltip event rewrite (#8038)
		
		Redesigns the tooltip events, and adds a feature where mods can register factories for ClientTooltipComponents, which are used for custom rendering in tooltips. The old events are maintained for binary compatibility.

=========
Build: 1.17.1-37.0.84 - Fri Oct 08 06:50:36 GMT 2021
	xfacthd:
		Add ForgeSpawnEggItem to lazily handle EntityTypes (#8044)

=========
Build: 1.17.1-37.0.83 - Thu Oct 07 20:32:10 GMT 2021
	xfacthd:
		Reimplement IForgeBlockEntity#onLoad() hook (#7946)

=========
Build: 1.17.1-37.0.82 - Tue Oct 05 02:16:13 GMT 2021
	gigaherz:
		Implement GUI Stacking feature. (#8130)
		
		You can now use `mc.pushGuiLayer` and `mc.popGuiLayer` to manage the layers.
		mc.setScreen behaves such that if called with a non-null screen it replaces the entire stack, and if called with null it closes the entire stack.

=========
Build: 1.17.1-37.0.81 - Mon Oct 04 22:10:17 GMT 2021
	gigaherz:
		Add ability for people to add custom pack finders (RepositorySources) (#8121)
		
		Added AddPackFindersEvent which lets you add additional resource/data pack sources to the game.
		Added PathResourcePack as a utility to allow easy providing of a subfolder in a mod as a resource pack.

=========
Build: 1.17.1-37.0.80 - Mon Oct 04 21:43:22 GMT 2021
	onelemonyboi:
		Prevent Block/Entity data side leak on integrated servers by copying custom data before writing. #8111

	diesieben07:
		Added EntityEvent.EnteringSection event to replace EnteringChunk event. (#8078)

=========
Build: 1.17.1-37.0.78 - Sun Oct 03 18:12:16 GMT 2021
	alex.leo.barter:
		Fix breaking block particles not respecting IModelData (#8065)
		
		The sprite used for the block particles needs updating after the constructor otherwise it defaults to the texture sprite returned from passing ModelData.INSTANCE to get IForgeBakedModel#getParticleIcon. Calling updateSprite fetches the real IModelData instance for that blockstate/pos and sets the texture to the desired one

	sciwhiz12:
		Re-implement linear filtering text render types (#8052)
		
		* Re-implement linear filtering text render types
		
		Implements and closes #7996

=========
Build: 1.17.1-37.0.76 - Sun Oct 03 18:00:24 GMT 2021
	shroomdog27:
		Fix Signs breaking with custom `WoodType`s (#8132)

=========
Build: 1.17.1-37.0.75 - Fri Oct 01 20:21:24 GMT 2021
	lexmanos:
		Bump SJH version. Closes #8127
		Attempt addressing loading libraries during dev time, and bump SPI version introducing GAMELIBRARY type. #7976 #7957 #8090

=========
Build: 1.17.1-37.0.74 - Fri Oct 01 05:54:38 GMT 2021
	lexmanos:
		Capability rework to get rid of @CapabilityInject and use CapabilityToken as the identifier, deprecated old system for removal in 1.18. (#8116)

=========
Build: 1.17.1-37.0.73 - Mon Sep 27 19:59:19 GMT 2021
	onelemonyboi:
		Fix pet death message being sent when pet death event is canceled. (#8110)

=========
Build: 1.17.1-37.0.72 - Mon Sep 27 19:26:34 GMT 2021
	rikka0w0:
		[1.17.x] implements canConnectRedstone(), Redstone dust now defers to the blockstate for determining connectivity (#8014)

=========
Build: 1.17.1-37.0.71 - Fri Sep 24 21:10:52 GMT 2021
	sciwhiz12:
		Prevent call to Item#initializeClient when in datagen (#8097)
		
		When running under data-generation, the Minecraft singleton is unavailable
		even though the operating env is under the CLIENT dist. Adding this check
		prevents crashes from devs unaware of this, as most uses of
		IItemRenderProperties (usually for a custom BEWLR) make use of the
		Minecraft singleton and therefore will cause NPEs if not guarded against.
		
		A similar thing happens in MobEffect and Block.

=========
Build: 1.17.1-37.0.70 - Sun Sep 19 23:36:14 GMT 2021
	sciwhiz12:
		Move ItemStack#forgeInit call earlier to allow earlier capability queries (#8096)

=========
Build: 1.17.1-37.0.69 - Sun Sep 19 02:42:47 GMT 2021
	sciwhiz12:
		Remove incorrect FallingBlock patch (#8092)
		
		The patch accidentally replaces the minimum build height (set by the
		dimension via e.g. datapacks) with 0, causing falling blocks placed
		below Y level 0 to never fall.
		
		Fixes #8091

=========
Build: 1.17.1-37.0.68 - Sat Sep 18 21:58:41 GMT 2021
	sciwhiz12:
		Fix inverted hooks for PermissionsChangedEvent (#8089)
		
		Because IEventBus#post returns true on cancellation and the patched-in
		hooks inverts the return of the ForgeHooks method, if the player
		whose permission level is being changed is online and the event is not
		cancelled, the permission change _is_ cancelled.
		
		The fix is inverting the patched-in hooks and the default return value
		of the ForgeHooks method, so that the permission change is cancelled
		only if the player is online, the event is fired, and the event is cancelled.
		
		Fixes #8088

=========
Build: 1.17.1-37.0.67 - Fri Sep 17 20:26:19 GMT 2021
	oriondevelopment:
		Add the missing patch for ItemStack for last build. (#8085)

=========
Build: 1.17.1-37.0.66 - Fri Sep 17 18:23:28 GMT 2021
	oriondevelopment:
		Support Lazy capabilities on itemstacks, for better ItemStack copy performance. (#7945)

=========
Build: 1.17.1-37.0.65 - Fri Sep 17 00:11:21 GMT 2021
	gigaherz:
		Fix EntityJoinWorldEvent not firing as expected: (#8033)
		
		- Fix entities loaded from disk not getting the event.
		- Fix vehicles with passengers getting the event twice.

=========
Build: 1.17.1-37.0.64 - Thu Sep 16 23:54:41 GMT 2021
	sciwhiz12:
		Re-add patch to release buffer in custom payload packet (#8042)

	noeppi-noeppi:
		Propagate all arguments passed to the server start scripts to the game (#8060)

=========
Build: 1.17.1-37.0.62 - Thu Sep 16 23:37:31 GMT 2021
	ichttt:
		Remove old Log4j thread cache invalidation (#8068)

=========
Build: 1.17.1-37.0.61 - Wed Sep 15 19:09:18 GMT 2021
	lexmanos:
		Fix pick-block for items that map to multiple blocks. Closes #8080

=========
Build: 1.17.1-37.0.60 - Tue Sep 14 23:54:46 GMT 2021
	gigaherz:
		Update nashorn to 15.3, which fixes crashing when run on Java 17.
		Please note that due to https://bugs.mojang.com/browse/MCL-18306, the vanilla launcher will not let you use Java 17 yet without workarounds.

=========
Build: 1.17.1-37.0.59 - Sun Sep 12 05:20:54 GMT 2021
	sizableshrimp:
		Add mixin full release to install list. (#8076)

=========
Build: 1.17.1-37.0.58 - Wed Sep 08 20:22:44 GMT 2021
	sciwhiz12:
		Add new tool action for shield blocking, replacing `IForgeItem#isShield` (#8055)

=========
Build: 1.17.1-37.0.57 - Wed Sep 08 18:36:16 GMT 2021
	sciwhiz12:
		Add workaround for pairs of `'` being stripped (#8050)
		
		Fixes #7396, where if a translated string with balanced pairs of single
		quote characters passes through ForgeI18n, the quotes are stripped
		because of ExtendedMessageFormat. This is most notable in languages
		where `'` is used frequently, like Canadian French from the bug report.
		
		Note that unbalanced pairs cause an IllegalArgumentException in
		ExtendedMessageFormat, which means the message is not affected.

=========
Build: 1.17.1-37.0.56 - Wed Sep 08 18:20:26 GMT 2021
	sciwhiz12:
		Re-add missing patch for IForgeItem#getEquipmentSlot (#8041)

=========
Build: 1.17.1-37.0.55 - Wed Sep 08 17:39:41 GMT 2021
	mysticdrew:
		Added PlayerPermissionChangedEvent(#8023)

=========
Build: 1.17.1-37.0.54 - Wed Sep 08 17:22:41 GMT 2021
	davidqf555:
		Changed Monster Requirement to Mob in RangedBowAttackGoal (#7960)

=========
Build: 1.17.1-37.0.53 - Thu Sep 02 21:24:11 GMT 2021
	noeppi-noeppi:
		Add shebang to run.sh in server files (#8058)

=========
Build: 1.17.1-37.0.52 - Thu Sep 02 17:45:20 GMT 2021
	lexmanos:
		Fix incorrect parameter being sent to AbstractContainerScreen#getSlotColor.

=========
Build: 1.17.1-37.0.51 - Wed Sep 01 14:26:47 GMT 2021
	sciwhiz12:
		Patch ModSorter to include forge mod in forgeAndMC list (#8043)

=========
Build: 1.17.1-37.0.50 - Tue Aug 31 15:51:55 GMT 2021
	pupnewfster:
		Fix GuiUtils#drawContinuousTexturedBox making assumptions about what shader is currently active, and fix buttons and header not showing on LoadingErrorScreen (#8022)

=========
Build: 1.17.1-37.0.49 - Tue Aug 31 14:57:25 GMT 2021
	ititus:
		Fix ScrollPanel render calls and usage (#8012)

=========
Build: 1.17.1-37.0.48 - Tue Aug 31 09:33:44 GMT 2021
	sciwhiz12:
		Fix all layers of ItemLayerModel being fullbright (#8039)
		
		Fixes #8007

=========
Build: 1.17.1-37.0.47 - Mon Aug 30 23:04:51 GMT 2021
	cyborgmas:
		Cleanup Tag Loading, this migrates thins to more of a vanilla style.  (#7898)

=========
Build: 1.17.1-37.0.46 - Mon Aug 30 20:42:53 GMT 2021
	cech12:
		Add Shears ToolActions (#7997)
		
		Make shear interactions extend to subclasses
		Add Shears actions for beehive harvesting, pumpkin carving and trip wire disarming

=========
Build: 1.17.1-37.0.45 - Fri Aug 27 20:44:42 GMT 2021
	sizableshrimp:
		Fix broken fmlonly installer and promote it to page gen (#8029)
		
		Update gradle wrapper to 7.2

=========
Build: 1.17.1-37.0.44 - Mon Aug 23 17:52:30 GMT 2021
	cyborgmas:
		Minor resource pack related fixes (#7884)

=========
Build: 1.17.1-37.0.43 - Sun Aug 22 01:30:31 GMT 2021
	lexmanos:
		Fix misaligned patch causing monsters to not spawn in nether fortresses correctly.

=========
Build: 1.17.1-37.0.42 - Fri Aug 20 19:38:58 GMT 2021
	diesieben07:
		Add RegisterCapabilitiesEvent (#8021)

=========
Build: 1.17.1-37.0.41 - Thu Aug 19 21:31:20 GMT 2021
	commoble:
		Move static ITEM_TIER_ORDERING_JSON resourcelocation declaration from anonymous class into outer class to work around eclipse compiler error. (#8018)

=========
Build: 1.17.1-37.0.40 - Thu Aug 19 05:44:39 GMT 2021
	sizableshrimp:
		Fix entities not spawning in structures (#8020)
		
		This affects swamp huts, pillager outposts, ocean monuments, and nether fortresses

=========
Build: 1.17.1-37.0.39 - Wed Aug 18 20:49:43 GMT 2021
	commoble:
		Add support for forge's "remove" list to tag datagenerators (#7911)

=========
Build: 1.17.1-37.0.38 - Wed Aug 18 20:05:33 GMT 2021
	sirttas:
		Add hook to allow items to customize the attack sweep range. (#7981)

=========
Build: 1.17.1-37.0.37 - Wed Aug 18 19:46:48 GMT 2021
	git:
		Track the active mod within DeferredWorkQueue (#7973)

=========
Build: 1.17.1-37.0.36 - Wed Aug 18 09:16:16 GMT 2021
	28724985+strikerrocker:
		Allow to check spawner block entity in events (#7941)

=========
Build: 1.17.1-37.0.35 - Wed Aug 18 05:02:56 GMT 2021
	cyborgmas:
		Remove neutral mob patches as the bug was fixed upstream. (#8001)

=========
Build: 1.17.1-37.0.34 - Sun Aug 15 14:18:49 GMT 2021
	malte0811:
		Ensure that all render targets in a PostChain use the same format (#7978)
		
		closes #6995

=========
Build: 1.17.1-37.0.33 - Thu Aug 12 08:44:46 GMT 2021
	sizableshrimp:
		Fix update checker to use runtime minecraft version (#8000)

=========
Build: 1.17.1-37.0.32 - Wed Aug 11 01:53:28 GMT 2021
	67878524+vemerion:
		Correct incorrect arguments for render hand event (#7987)

=========
Build: 1.17.1-37.0.31 - Tue Aug 10 22:45:23 GMT 2021
	gigaherz:
		Redesign the tool system to rely on the new vanilla tags. (#7970)
		
		Changed:
		- ToolType is replaced with ToolAction, which can selectively represent which actions are supported by an item.
		- Added a canPerformAction method to query ToolActions.
		- Renamed canHarvestBlock to isCorrectToolForDrops to match vanilla.
		- Added TierSortingRegistry, which can be used to add custom tiers and supports sorting between vanilla or with other mods.
		
		How to use:
		
		For the breaking system there's 2 methods:
		- getDestroySpeed decides if an item *can* mine the block fast. Override if you have multiple tags or your item isn't a DiggerItem.
		- isCorrectToolForDrops decides if an item will get drops. Returning false will also slow down mining, regardless of getDestroySpeed. Override if you have type-dependant tiers or your item isn't a DiggerItem.
		
		For the tier system mods can just call `TierSortingRegistry.registerTier(tier, "name", List.of(lesser tiers), List.of(better tiers));` to register their tiers.
		There's helper methods to query tiers such as TierSortingRegsitry.isCorrectTierForDrops.
		
		The ToolActions solve 2 problems:
		1. distinguishing which kind of digger an item can be
		2. querying if the item can perform specific secondary actions.
		Any item can override `canPerformAction` to customize which actions it performs.

=========
Build: 1.17.1-37.0.30 - Tue Aug 10 20:11:07 GMT 2021
	lexmanos:
		Fixed reference to registryAccess in dimension fix, and marked for removal in next MC version. Closes #7961

=========
Build: 1.17.1-37.0.29 - Tue Aug 10 07:11:36 GMT 2021
	lexmanos:
		Bump BootStrapLauncher, and make sure Capability providers call parent revive.

=========
Build: 1.17.1-37.0.28 - Mon Aug 09 19:09:40 GMT 2021
	sirttas:
		Fix custom ingredients not being read correctly over the network. (#7980)

=========
Build: 1.17.1-37.0.27 - Fri Aug 06 17:18:27 GMT 2021
	djbake101:
		Add a OnDatapackSyncEvent, useful as a notification for modders to send extra data to the client (#7912)

=========
Build: 1.17.1-37.0.26 - Fri Aug 06 16:42:42 GMT 2021
	choonster:
		Add access transformer to make Features.Decorators class public (#7974)

=========
Build: 1.17.1-37.0.25 - Wed Aug 04 08:44:11 GMT 2021
	lexmanos:
		Fix NullPointerException in DetercorRailBlock patch.

=========
Build: 1.17.1-37.0.24 - Wed Aug 04 08:08:36 GMT 2021
	lexmanos:
		Add forceSystemNanoTime config option to the client.
		Normally glfwGetTime is used, but in some cases it may have performance issues.

	lexmanos:
		Remove entity.remove(keepData) functions because Mojang changed entity removal mechanics.
		If a modder wishes to use the capabilities from a invalid entity. They must manually call reviveCaps/invalidateCaps themselves.

=========
Build: 1.17.1-37.0.22 - Mon Aug 02 22:47:24 GMT 2021
	hycrafthd:
		Rename potion registry fields to match the mojang names (#7939)

=========
Build: 1.17.1-37.0.21 - Mon Aug 02 21:58:21 GMT 2021
	bl4ckscor33:
		Fix patch issue that removed SimpleWaterloggedBlock from BaseRailBlock (#7937)

=========
Build: 1.17.1-37.0.20 - Mon Aug 02 21:34:56 GMT 2021
	strikerrocker:
		Fix EntityInteractSpecific Event not being fired in server (#7936)

=========
Build: 1.17.1-37.0.19 - Sun Aug 01 23:00:34 GMT 2021
	championash5357:
		Add BlockEntityRenderer registering to RegisterRenderers (#7975)

=========
Build: 1.17.1-37.0.18 - Sun Aug 01 05:02:57 GMT 2021
	daemonumbra:
		Fix installer issue with spaces in paths. (#7972)

=========
Build: 1.17.1-37.0.17 - Sat Jul 31 00:54:01 GMT 2021
	35673674+alcatrazescapee:
		Remove unused config entries. (#7954)

=========
Build: 1.17.1-37.0.16 - Sat Jul 31 00:43:09 GMT 2021
	35673674+alcatrazescapee:
		Re-add call to Ingredient#invalidateAll() (#7953)

=========
Build: 1.17.1-37.0.15 - Fri Jul 30 02:10:51 GMT 2021
	gigaherz:
		Introduce RegisterShadersEvent to register shaders with the proper timing (runs every client resource reload).
		Fix ShaderInstance to allow resourcelocations with namespaces as input.
		Fix shader parsing to respect resource domains.
		Fix ForgeRenderTypes to use the right shader in each situation.
		Add custom forge shader for unlit translucent entity rendering, equivalent to the vanilla entity translucent shader.

	daemonumbra:
		Remove Generic from ProjectileImpactEvent (#7959)
		
		Generification of this event was half-done and has been aborted, leaving the generic parameter in place just creates confusion and crashes

=========
Build: 1.17.1-37.0.13 - Wed Jul 28 05:43:57 GMT 2021
	sizableshrimp:
		Fix userdev mod deps on the classpath (#7919)

=========
Build: 1.17.1-37.0.12 - Mon Jul 26 22:22:53 GMT 2021
	ititus:
		Fix typo in FluidBlockWrapper (#7931)

=========
Build: 1.17.1-37.0.11 - Mon Jul 26 21:24:39 GMT 2021
	lexmanos:
		Fix rounding related errors with small entity pathfinding. Closes #7730

=========
Build: 1.17.1-37.0.10 - Mon Jul 26 08:55:12 GMT 2021
	eerussianguy:
		Add modder-friendly way to edit the boat model / texture in custom boats (#7897)

=========
Build: 1.17.1-37.0.9 - Sun Jul 25 20:48:45 GMT 2021
	commoble:
		Fix EntityRendererEventsTest crashing dedicated server when running forge_test_server in forgedev (#7930)

=========
Build: 1.17.1-37.0.8 - Sun Jul 25 10:08:29 GMT 2021
	gigaherz:
		Added RegisterClientReloadListenersEvent which lets you register reload listeners with appropriate timing.
		Added new entity rendering events.
		- EntityRenderersEvent.RegisterLayerDefinitions: Used to register layer definitions for entity models.
		- EntityRenderersEvent.RegisterRenderers: Used to register entity renderers.
		- EntityRenderersEvent.AddLayers: Called during resource reload after all renderers have been constructed and it's safe to add layers.
		Removed RenderingRegistry, which is now not necessary.
		Removed a few unused things.
		Fixes #7920

=========
Build: 1.17.1-37.0.7 - Sat Jul 24 18:19:07 GMT 2021
	cyborgmas:
		remove old direct GL call (#7907)

	supermartijn642:
		Pass the 'includeName' flag to the ItemTossEvent (#7894)

=========
Build: 1.17.1-37.0.5 - Sat Jul 24 14:42:12 GMT 2021
	supermartijn642:
		Expose RenderStateShard inner classes (#7895)
		
		In 1.17, all of the inner classes of `RenderStateShard` (`RenderStateShard.OverlayStateShard`, `RenderStateShard.WriteMaskStateShard`, etc.) have been changed to protected. These classes are needed however to create new `RenderType.CompositeRenderType`'s using `RenderType.CompositeState.CompositeStateBuilder`.
		Since these are protected inner classes, their constructors also can't be directly be obtained using `ObfuscationReflectionHelper`.
		
		Currently, any mod using custom `RenderType`'s will have to either:
		- add their own access transformer for the inner classes, or
		- extend `RenderStateShard` to access `RenderStateShard`'s inner classes, and extend `RenderType` to access `RenderType.CompositeRenderType`
		
		This PR changes the visibility of `RenderStateShard`'s inner classes to public in Forge's `accesstransformer.cfg`.

	cyborgmas:
		1.17 Fix InitGuiEvent (#7906)

=========
Build: 1.17.1-37.0.3 - Sat Jul 24 14:30:37 GMT 2021
	cyborgmas:
		added back attribute patches (#7886)

=========
Build: 1.17.1-37.0.2 - Sat Jul 24 00:26:10 GMT 2021
	lexmanos:
		Bump SecureJarHandler, and fix life cycle event's deferred work being on the incorrect thread/boot classloader.

=========
Build: 1.17.1-37.0.1 - Thu Jul 22 21:52:37 GMT 2021
	lexmanos:
		Bump SecureJarHandler to fix package meta issue. Closes #7881
		Fix version.json having duplicate libraries.
>>>>>>> 243d4f3 (Started porting the mod to 1.17)
>>>>>>> 3d9c0b1 (Started porting the mod to 1.17)
